ccm.component({name:"bugtrackerMwe",config:{html:[ccm.store,{local:"https://moritzkemp.github.io/bugtracker-mwe/resources/js/templates.json"}],remoteStore:[ccm.store,{store:"bugtracker",url:"https://ccm2.inf.h-brs.de/index.js"}],style:[ccm.load,"https://moritzkemp.github.io/bugtracker-mwe/resources/css/bug.css"],icons:[ccm.load,"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.4.0/css/font-awesome.min.css"],inputDataStore:[ccm.store,"https://moritzkemp.github.io/bugtracker-mwe/resources/js/input.json"]},Instance:function(){var t=this,e=0;t.render=function(n){var o=ccm.helper.element(t),s=function(e){var n=$(ccm.helper.html(t.html.get("main"))),s=$(ccm.helper.html(t.html.get("header"),{bugIdTitle:"ID",priorityTitle:"Priority",nameTitle:"Title",statusTitle:"State",subscriberTitle:"Subscriber",descriptionTitle:"Description"}));s.appendTo(n),r(e);for(var i=0;e[i];){var c=$(ccm.helper.html(t.html.get("bug"),{bugId:e[i].bugId,priority:e[i].priority,subscriber:e[i].subscriber,description:e[i].description,status:e[i].state,name:e[i].name}));c.appendTo(n),i++}var u=$(ccm.helper.html(t.html.get("new-bug-btn")));u.appendTo(n),o.html(n)},i=function(){inputComponent=ccm.instance("https://akless.github.io/ccm-components/resources/input/ccm.input.js",{data:{store:t.inputDataStore,key:"bugs"},element:t.element,onFinish:function(e){var r=(new Date).getTime();e.bugId=r,e.key=r,t.storeBug(e)}},function(e){ccm.helper.find(t,".new-bug-btn").click(function(){e.render()})})},c=function(){e=0===e?1:0,t.render()},u=function(){var e=$(this).parents(".bug").children(".bug-id").html();t.remoteStore.get(function(r){r.forEach(function(r){r.bugId!==e&&r.bugId.toString()!==e||t.removeBug(r)}),t.render()})},a=function(){var e=$(this).parents(".bug"),r=e.children(".bug-id").html(),n={};t.remoteStore.get(function(o){o.forEach(function(t){t.bugId!==r&&t.bugId.toString()!==r||(n=t)});var s=$(ccm.helper.html(t.html.get("bug-edit"),{bugId:n.bugId,priority:n.priority,subscriber:n.subscriber,description:n.description,name:n.name}));s.find(".fa-check").click(function(){n.state=s.find("#states").val(),n.description=s.find("#description-text").val(),t.remoteStore.set(n,function(){t.render()})}),s.find(".fa-trash").click(function(){t.render()}),e.replaceWith(s)})};t.remoteStore.get(function(t){s(t),i(),$(".current-status-header").click(this,c),$(".bug-buttons > .fa-edit").click(this,a),$(".bug-buttons > .fa-remove").click(this,u)}),n&&n()},t.storeBug=function(e){t.remoteStore.set(e,function(t){console.log(t)})},t.removeBug=function(e){e.key?t.remoteStore.del(e.key,function(){console.log("Delete bug with key "+e.key)}):console.log("Bug not persisted yet. Skip delete request.")};var r=function(t){var r=function(t,e){return"open"===t.state||"closed"===e.state?-1:t.state===e.state?0:1},n=function(t,e){return-1*r(t,e)};0===e?($("#status-mark").removeClass("fa-sort-up"),$("#status-mark").addClass("fa-sort-down"),t.sort(r)):($("#status-mark").removeClass("fa-sort-down"),$("#status-mark").addClass("fa-sort-up"),t.sort(n))}}});